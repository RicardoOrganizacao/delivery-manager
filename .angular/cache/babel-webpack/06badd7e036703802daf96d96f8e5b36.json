{"ast":null,"code":"import { Task } from \"./shared/task.model\";\nimport { take } from \"rxjs/operators\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"./shared/task.service\";\nimport * as i2 from \"ngx-toastr\";\nimport * as i3 from \"@angular/forms\";\nimport * as i4 from \"@angular/common\";\nimport * as i5 from \"@angular/router\";\n\nconst _c0 = function (a1) {\n  return [\"/tasks\", a1];\n};\n\nfunction TasksComponent_tr_20_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"tr\");\n    i0.ɵɵelementStart(1, \"td\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"td\");\n    i0.ɵɵelementStart(6, \"a\", 10);\n    i0.ɵɵelement(7, \"span\", 11);\n    i0.ɵɵtext(8, \" Detalhes \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"button\", 12);\n    i0.ɵɵlistener(\"click\", function TasksComponent_tr_20_Template_button_click_9_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r3);\n      const task_r1 = restoredCtx.$implicit;\n      const ctx_r2 = i0.ɵɵnextContext();\n      return ctx_r2.deleteTask(task_r1);\n    });\n    i0.ɵɵelement(10, \"span\", 13);\n    i0.ɵɵtext(11, \" Excluir \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const task_r1 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(task_r1.id);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(task_r1.title);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"routerLink\", i0.ɵɵpureFunction1(3, _c0, task_r1.id));\n  }\n}\n\nexport let TasksComponent = /*#__PURE__*/(() => {\n  class TasksComponent {\n    constructor(taskService, toastService) {\n      this.taskService = taskService;\n      this.toastService = toastService;\n      this.newTask = new Task(NaN, '');\n    }\n\n    ngOnInit() {\n      this.taskService.getAll().subscribe({\n        next: tasks => {\n          this.tasks = tasks.sort((a, b) => b.id - a.id);\n        },\n        error: _erro => {\n          alert(\"Ocorreu um erro no servidor, tente mais tarde\");\n        }\n      });\n    }\n\n    createTask() {\n      this.newTask.title = this.newTask.title.trim();\n\n      if (!this.newTask.title) {\n        this.toastService.warning('Preencha corretamente', 'Atarefa deve ter um título', {\n          timeOut: 3000,\n          positionClass: 'toast-top-center'\n        });\n      } else {\n        this.taskService.create(this.newTask).subscribe({\n          next: task => {\n            this.tasks.unshift(task), this.newTask = new Task(NaN, '');\n          },\n          error: () => {\n            alert(\"Ocorreu um erro no servidor, tente mais tarde\");\n          }\n        });\n      }\n    }\n\n    deleteTask(task) {\n      this.toastService.warning('Clique aqui para confirmar', 'Deseja mesmo excluir?!', {\n        timeOut: 6000,\n        positionClass: 'toast-top-center'\n      }).onTap.pipe(take(1)).subscribe(() => this.toasterClickedHandler(task)); // if( confirm(`Deseja realmente excluir a tarefa \"${task.title}`) ) {\n      //   this.taskService.delete(task.id)\n      //     .subscribe({\n      //       next: () => { this.tasks = this.tasks.filter(t => t != task) },\n      //       error: () => { alert(\"Ocorreu um erro no servidor, tente mais tarde\") }\n      //     })\n      // }\n    }\n\n    toasterClickedHandler(task) {\n      console.log('Toastr clicked');\n      this.taskService.delete(task.id).subscribe({\n        next: () => {\n          this.tasks = this.tasks.filter(t => t != task), this.toastService.success('204', 'Excluído com sucesso', {\n            timeOut: 1000,\n            positionClass: 'toast-top-center'\n          });\n        },\n        error: () => {\n          alert(\"Ocorreu um erro no servidor, tente mais tarde\");\n        }\n      });\n    }\n\n  }\n\n  TasksComponent.ɵfac = function TasksComponent_Factory(t) {\n    return new (t || TasksComponent)(i0.ɵɵdirectiveInject(i1.TaskService), i0.ɵɵdirectiveInject(i2.ToastrService));\n  };\n\n  TasksComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: TasksComponent,\n    selectors: [[\"tasks\"]],\n    decls: 21,\n    vars: 2,\n    consts: [[1, \"container\"], [1, \"page-header\"], [1, \"well\"], [1, \"row\"], [1, \"col-md-10\"], [\"type\", \"text\", \"placeholder\", \"Digite uma nova tarefa\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [1, \"col-md-2\"], [1, \"btn\", \"btn-success\", 3, \"click\"], [1, \"table\"], [4, \"ngFor\", \"ngForOf\"], [1, \"btn\", \"btn-info\", 3, \"routerLink\"], [1, \"glyphicon\", \"glyphicon-info-sign\"], [1, \"btn\", \"btn-danger\", 3, \"click\"], [1, \"glyphicon\", \"glyphicon-trash\"]],\n    template: function TasksComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0);\n        i0.ɵɵelementStart(1, \"h1\", 1);\n        i0.ɵɵtext(2, \"Lista de Tarefas\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(3, \"div\", 2);\n        i0.ɵɵelementStart(4, \"div\", 3);\n        i0.ɵɵelementStart(5, \"div\", 4);\n        i0.ɵɵelementStart(6, \"input\", 5);\n        i0.ɵɵlistener(\"ngModelChange\", function TasksComponent_Template_input_ngModelChange_6_listener($event) {\n          return ctx.newTask.title = $event;\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(7, \"div\", 6);\n        i0.ɵɵelementStart(8, \"button\", 7);\n        i0.ɵɵlistener(\"click\", function TasksComponent_Template_button_click_8_listener() {\n          return ctx.createTask();\n        });\n        i0.ɵɵtext(9, \" Adicionar Tarefa \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(10, \"table\", 8);\n        i0.ɵɵelementStart(11, \"thead\");\n        i0.ɵɵelementStart(12, \"tr\");\n        i0.ɵɵelementStart(13, \"th\");\n        i0.ɵɵtext(14, \"ID\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(15, \"th\");\n        i0.ɵɵtext(16, \"T\\u00EDtulo\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(17, \"th\");\n        i0.ɵɵtext(18, \"A\\u00E7\\u00F5es\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(19, \"tbody\");\n        i0.ɵɵtemplate(20, TasksComponent_tr_20_Template, 12, 5, \"tr\", 9);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(6);\n        i0.ɵɵproperty(\"ngModel\", ctx.newTask.title);\n        i0.ɵɵadvance(14);\n        i0.ɵɵproperty(\"ngForOf\", ctx.tasks);\n      }\n    },\n    directives: [i3.DefaultValueAccessor, i3.NgControlStatus, i3.NgModel, i4.NgForOf, i5.RouterLinkWithHref],\n    styles: [\".btn-info[_ngcontent-%COMP%]{margin-right:5px}\"]\n  });\n  return TasksComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}