{"ast":null,"code":"import { HTTP_INTERCEPTORS } from \"@angular/common/http\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../shared/storage/storage.service\";\nimport * as i2 from \"../shared/auth.service\";\nexport let AuthInterceptor = /*#__PURE__*/(() => {\n  class AuthInterceptor {\n    constructor(storage, auth) {\n      this.storage = storage;\n      this.auth = auth;\n    }\n\n    intercept(request, next) {\n      let localUser = this.storage.getLocalUser(); //console.log('TOKEN', localUser);\n\n      if (localUser) {\n        //console.log('adicionou cabecalho -->')\n        const authRequest = request.clone({\n          headers: request.headers.set('Authorization', '' + localUser.token)\n        });\n        return next.handle(authRequest);\n      } else {\n        // console.log('não adicionou cabecalho -->')\n        return next.handle(request);\n      }\n    }\n\n  }\n\n  AuthInterceptor.ɵfac = function AuthInterceptor_Factory(t) {\n    return new (t || AuthInterceptor)(i0.ɵɵinject(i1.StorageService), i0.ɵɵinject(i2.AuthService));\n  };\n\n  AuthInterceptor.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: AuthInterceptor,\n    factory: AuthInterceptor.ɵfac\n  });\n  return AuthInterceptor;\n})();\nexport const AuthInterceptorProvider = {\n  provide: HTTP_INTERCEPTORS,\n  useClass: AuthInterceptor,\n  multi: true\n};","map":null,"metadata":{},"sourceType":"module"}